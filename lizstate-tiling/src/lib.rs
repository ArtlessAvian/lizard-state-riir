//! Square tilings that fill 2D spaces (plural!).
//! Or, 2D spaces formed by joining square tiles.
//!
//! # Usage
//! All Copy + Eq traits are intended to be implemented on references or unit types.
//! All Clone + Eq traits are intended to be implemented on references, unit types, or smart pointers.
//!
//! # Contributing
//! Careful about making marker traits `Default.` Reference types cannot be `Default.`

// clippy
#![allow(dead_code)]
#![warn(clippy::pedantic)]
// no_std
#![no_std]
#[cfg(feature = "std")]
extern crate std;

// ************** Basics and HasSquareTiling **************

/// The four cardinal directions!
pub mod direction;

/// A trait for 4-regular undirected graphs. Implementations are "spaces."
///
/// Every *directed* edge is labeled, and their reverse edges are labeled their inverse label.
pub mod tiling;

/// Sequences of directions.
///
/// A trait for behavior, and implementors with finite storage.
pub mod path;

/// The familiar 2D coordinates, implementing `HasSquareTiling`.
pub mod euclidean_plane;

/// The least restricted space. Two efficient paths lead to the same tile IFF they are the same path.
pub mod free_group;

// ************** Traits and Impls on Above **************

/// Runtime defined equality classes on paths.
///
/// Appending equal paths preserves equality.
/// Prepending equal paths does NOT preserve equality! (Not a group!)
pub mod path_equality;

/// A trait for Groups generated by `Up` and `Right`.
///
/// Can be seen as edge supergraphs of the 4-regular undirected graph.
pub mod group;

// ************** The Thing We Care About **************

/// A space *defined* by tiles with multiple paths to them.
pub mod custom_space;
