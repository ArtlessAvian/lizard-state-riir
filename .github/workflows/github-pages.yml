# References from 2shady4u/godot-cpp-ci
# Also uses witchpixels/godot4-3d-omnibuilder

# TODO: Use the same container/job for the entire build process?

name: "Github Pages"

on:
  push:
    branches: ["main", "ci-cd"]

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@cargo-llvm-cov
      - run: rustup update --no-self-update nightly
      - run: cargo +nightly llvm-cov --html --all-features --workspace
      - uses: actions/upload-artifact@v4
        with:
          name: rust-coverage
          path: target/llvm-cov/html

  build-wasm:
    runs-on: ubuntu-latest
    steps:
      - run: rustup update --no-self-update nightly
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - uses: mymindstorm/setup-emsdk@v14
        with:
          # pinned by godot/gdextension.
          version: 3.1.62
          actions-cache-folder: emsdk-cache
      - run: emcc -v

      - name: build wasm library
        run: |
          rustup toolchain install nightly
          rustup component add rust-src --toolchain nightly
          rustup target add wasm32-unknown-emscripten --toolchain nightly
          cargo +nightly build -Zbuild-std --target wasm32-unknown-emscripten

      - uses: actions/upload-artifact@v4
        with:
          name: glue-library-wasm
          path: target/**/godot_glue.wasm
          if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: build linux library
        run: |
          rustup update --no-self-update nightly
          rustup default nightly
          cargo +nightly build

      - uses: actions/upload-artifact@v4
        with:
          name: glue-library-linux
          path: target/**/libgodot_glue.so
          if-no-files-found: error

  godot-web-export:
    runs-on: ubuntu-latest
    needs: [build-wasm, build-linux]
    container:
      image: witchpixels/godot4-omnibuilder3d:latest-4.4.1-vanilla
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Fix paths for Github
        run: setup_github_paths.sh

      - name: Write Commit Hash
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git log -1 --format=reference > godot/ci-version.txt

      - name: Adjust Tool Scripts For Export
        run: bash ./.github/preprocess-gdscript.sh
        working-directory: .

      - name: Download WASM library
        uses: actions/download-artifact@v4
        with:
          name: glue-library-wasm
          path: target

      - name: Download Shared Library For Running Machine
        uses: actions/download-artifact@v4
        with:
          name: glue-library-linux
          path: target

      - name: Import assets
        run: godot -v --headless --path godot/ --import

      - name: Stamp Versions
        run: apply_version_info.sh

      - name: Godot Web Export
        run: |
          mkdir -v -p build/linux
          godot -v --headless --path godot/ --export-debug "Web" ../build/web/index.html
        timeout-minutes: 20

      - uses: actions/upload-artifact@v4
        with:
          name: godot-web-export
          path: build/web
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: [coverage, godot-web-export]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: rust-coverage
          path: build/coverage
      - uses: actions/download-artifact@v4
        with:
          name: godot-web-export
          path: build/
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/
          single-commit: true
